 [3_Array_FND_3]
- 4개의 FND를 앞 2자리와 뒤 2자리로 분리하여 뒤 2자리가 60이 되면(1초 간격으로 증가),
- 다시 0으로 초기화하고 앞자리를 1을 증가시키는 프로그램을 작성하라.
- 물론, 앞자리도 60이 되면 0으로 초기화 한다.
//
#define RCC_APB2ENR (*(volatile unsigned *)0x40021018)

#define GPIOA_CRL   (*(volatile unsigned *)0x40010800)
#define GPIOA_BSRR   (*(volatile unsigned *)0x40010810)
#define GPIOA_BRR   (*(volatile unsigned *)0x40010814)


#define GPIOC_CRL   (*(volatile unsigned *)0x40011000)
#define GPIOC_BSRR   (*(volatile unsigned *)0x40011010)
#define GPIOC_BRR   (*(volatile unsigned *)0x40011014)
//
#include "config.h"

void delay(int cnt)
{
  for(;cnt!=0;cnt--);
}
int main(void)
{
  unsigned char FND[]={0x3F, 0x06, 0x5B, 0x4F, 0x66,
		       0x6D, 0x7D, 0x27, 0x7F, 0x6F,
                       0x77};

  unsigned int cnt=0,cntm=0,digit;
  
  RCC_APB2ENR |= 0x14;

  GPIOA_CRL = 0x33333333;
  GPIOC_CRL = 0x33333333;  

while (1)  
{      
  if(cntm>=10)
  {
    digit=cntm/10;

    GPIOC_BSRR |= 0x0E; 
    GPIOA_BSRR |= FND[digit];
      
    delay(0xFFF);
      
    GPIOA_BRR |= 0xFF; 
    GPIOC_BRR |= 0xFF; 
  } 
    
  if(cntm>0)
  {
    digit=cntm%10;
    
    GPIOC_BSRR |= 0x0D; 
    GPIOA_BSRR |= FND[digit];
      
    delay(0xFFF);
      
    GPIOA_BRR |= 0xFF; 
    GPIOC_BRR |= 0xFF; 
      
  }   
    
  if(cnt>=10)
  {
    digit=cnt/10;
    GPIOC_BSRR |= 0x0B; 
    GPIOA_BSRR |= FND[digit];
      
    delay(0xFFF);
      
    GPIOA_BRR |= 0xFF; 
    GPIOC_BRR |= 0xFF; 
      
  } 
    
  if(cnt>0)
  {
    digit=cnt%10;
    GPIOC_BSRR |= 0x07; 
    GPIOA_BSRR |= FND[digit];
      
    delay(0xFFF);
      
    GPIOA_BRR |= 0xFF; 
    GPIOC_BRR |= 0xFF; 
      
  } 
  
  cnt++;
  if(cnt>59){
    cnt=0 ,cntm++;
  }
  if(cntm>59) cntm=0;
      
}
  
}//end main